workflows:
  android-workflow:
    name: Android Workflow
    instance_type: mac_mini_m1
    max_build_duration: 120
    environment:
      # android_signing:
      #   - keystore_reference
      # groups:
      #   - google_play # <-- (Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS)
      vars:
        PACKAGE_NAME: "lol.polify.polify" # <-- Put your package name here
        GOOGLE_PLAY_TRACK: "alpha"
        JAVA_HOME: "/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home"
      flutter: stable
    scripts:
      - name: Get Flutter packages
        script: |
          flutter packages pub get
          dart pub global activate flutter_distributor
      - name: Codegen
        script: |
          dart run build_runner build --delete-conflicting-outputs
        ignore_failure: true
      - name: Build APK and AAB with Flutter
        script: |
          export PATH="$PATH":"$HOME/.pub-cache/bin"
          flutter_distributor package --platform android --targets=apk,aab
    artifacts:
      - dist/**/*.apk
      - dist/**/*.aab
    # publishing:
    #   email:
    #     recipients:
    #       - user_1@example.com
    #       - user_2@example.com
    #     notify:
    #       success: true
    #       failure: false
    #   google_play:
    #     credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
    #     track: $GOOGLE_PLAY_TRACK
    #     submit_as_draft: true
  ios-workflow:
    name: iOS Workflow
    instance_type: mac_mini_m1
    max_build_duration: 120
    # integrations:
    #   app_store_connect: codemagic
    environment:
      # ios_signing:
      #   distribution_type: app_store
      #   bundle_identifier: io.codemagic.flutteryaml
      # vars:
      #   APP_ID: 1111111111 # <-- Put your APP ID here
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Install pods
        script: |
          find . -name "Podfile" -execdir pod install \;
      - name: Flutter build ipa and automatic versioning
        script: |
          flutter build ipa --release
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    # publishing:
    #   # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
    #   email:
    #     recipients:
    #       - user_1@example.com
    #       - user_2@example.com
    #     notify:
    #       success: true # To receive a notification when a build succeeds
    #       failure: false # To not receive a notification when a build fails
    #   slack:
    #     # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
    #     channel: "#builds"
    #     notify_on_build_start: true # To receive a notification when a build starts
    #     notify:
    #       success: true # To receive a notification when a build succeeds
    #       failure: false # To not receive a notification when a build fails
    #   app_store_connect:
    #     auth: integration

    #     # Configuration related to TestFlight (optional)
    #     # Note: This action is performed during post-processing.
    #     submit_to_testflight: true
    #     beta_groups: # Specify the names of beta tester groups that will get access to the build once it has passed beta review.
    #       - group name 1
    #       - group name 2

    #     # Configuration related to App Store (optional)
    #     # Note: This action is performed during post-processing.
    #     submit_to_app_store: false
