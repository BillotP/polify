workflows:
  android-ios-workflow:
    name: Android And Ios Workflow
    instance_type: mac_mini_m1
    max_build_duration: 120
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/.gradle/caches
        - $HOME/Library/Caches/CocoaPods
    environment:
      # android_signing:
      #   - keystore_reference
      # groups:
      #   - google_play # <-- (Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS)
      vars:
        PACKAGE_NAME: "lol.polify.polify" # <-- Put your package name here
        GOOGLE_PLAY_TRACK: "alpha"
        JAVA_HOME: "/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home"
      flutter: stable
    scripts:
      - name: Get Flutter packages
        script: |
          flutter packages pub get
          dart pub global activate flutter_distributor
      - name: Codegen
        script: |
          cp .env.sample .env
          dart run build_runner build --delete-conflicting-outputs
        ignore_failure: true
      - name: Build APK and AAB with Flutter
        script: |
          export PATH="$PATH":"$HOME/.pub-cache/bin"
          flutter_distributor package --platform android --targets=apk,aab
      - name: Install pods
        script: |
          find . -name "Podfile" -execdir pod install \;
      - name: Flutter build ipa and automatic versioning
        script: |
          export PATH="$PATH":"$HOME/.pub-cache/bin"
          flutter build ios --release --no-codesign
          # flutter_distributor package --platform ios --targets=ipa
    artifacts:
      - dist/**/*.apk
      - dist/**/*.aab
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    # publishing:
    #   email:
    #     recipients:
    #       - user_1@example.com
    #       - user_2@example.com
    #     notify:
    #       success: true
    #       failure: false
    #   google_play:
    #     credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
    #     track: $GOOGLE_PLAY_TRACK
    #     submit_as_draft: true